✅ 問題1

整数型 int、小数型 double、文字型 char、真偽値型 boolean、文字列型 String を使って、以下のような変数を宣言してください。

年齢（整数で25）
int age=25;
身長（小数で170.5）
double height =170.5;
性別（男性なら 'M' とする）
char gender = 'M';
勉強中かどうか（true/falseで表す。ここでは true とする）
boolean isStudy = true;
名前（例として "Taro"）
String name ="Taro";
※ Java のコードとして書いてください。


問題2
次のような定数を final を使って宣言してください。
円周率（double型、値は 3.14159）
1週間の日数（int型、値は 7）

※ Java のコードとして書いてください。

public class Main {
  public static void main (String[] args){
    final double PI = 3.14159;
    System.out.println(PI);

    final int DaysOfTheWeek = 7;
    System.out.println(DaysOfTheWeek);
  }
}



✅ 問題3（型変換）

次の処理をする Java のコードを書いてください。
int 型の変数 num1 に 10 を代入
double 型の変数 num2 に num1 を代入（暗黙的型変換）
double 型の変数 num3 に 9.8 を代入
int 型の変数 num4 に num3 を代入（明示的型変換を使うこと！）

最後に、それぞれの変数を System.out.println で出力してください。

public class Main {
  public static void main (String[] args){
    int num1= 10;
    double num2 =num1;
    
    double num3 = 9.8;
    int num4 = (int)num3;

    System.out.println(num2);
    System.out.println(num4);
  }
}

💡 補足
暗黙的型変換（自動）：小さい型 → 大きい型（例：int → double）
明示的型変換（キャスト）：大きい型 → 小さい型（例：double → int）



✅ 問題4（演算子）
次の計算を Java のコードで書いてください。
変数 a に 15、変数 b に 4 を代入
以下を計算して出力してください
a + b
a - b
a * b
a / b （整数同士の割り算に注意！）
a % b （余り）

あなたの解答をお願いします。

public class Main {
  public static void main (String[] args){
    int a =15;
    int b =4;
    System.out.println(a + b);
    System.out.println(a - b);
    System.out.println(a * b);
    System.out.println(a / b);
    System.out.println(a % b);
  }
}




✅ 問題5（代入演算子）
次の処理を Java のコードで書いてください。
整数型の変数 x に 10 を代入
x に 5 を足して代入（+= を使う）
x から 3 を引いて代入（-= を使う）

最後に x の値を出力してください。

public class Main {
  public static void main (String[] args){
    int x = 10;
    x += 5;
    x -= 3;
    System.out.println(x);
  }
}
+= や -= を使うときは 新しく int をつけてはいけません。
int は最初の宣言のときだけ必要です。





✅ 問題6（比較演算子）
次のコードを書いてください。
整数型の変数 a に 7、b に 10 を代入
以下の比較をして、それぞれの結果を System.out.println で出力してください。
a == b
a != b
a > b
a < b
a >= 7
b <= 10

あなたの解答をお願いします。

public class Main{
  public static void main (String[] args){
    int a = 7;
    int b = 10;

    System.out.println(a == b);
    System.out.println(a != b);
    System.out.println(a > b);
    System.out.println(a < b);
    System.out.println(a >= 7);
    System.out.println(b <= 10);
  }
}






✅ 問題7（論理演算子の意味理解）
以下の文章について、true / false を答えてください。
（コードを書かなくても大丈夫です。頭の中で考えてみましょう）

a = 5、b = 10 のとき
(a > 0 && b > 0) は true になる。
👉 「&&」は かつ を意味する。
true

x = -3、y = 7 のとき
(x > 0 || y > 0) は true になる。
👉 「||」は または を意味する。
true

flag = false のとき
!flag は true になる。
👉 「!」は 否定（反対にする） を意味する。
true
✍️ それぞれ true / false を答えてみてください。







✅ 問題8（インクリメント・デクリメント）

次のコードを実行すると、どのように出力されるか答えてください。

public class Main {
  public static void main (String[] args){
    int x = 5;

    System.out.println(x++); // (1)
    5
    System.out.println(x);   // (2)
    6

    System.out.println(++x); // (3)
    7
    System.out.println(x);   // (4)
    7

    System.out.println(x--); // (5)
    7
    System.out.println(x);   // (6)
    6

    System.out.println(--x); // (7)
    5
    System.out.println(x);   // (8)
    5
  }
}


✍️ それぞれ (1)〜(8) の出力結果 を答えてみてください。

✅ まとめると：
x は同じ変数としてプログラムの流れで更新され続ける
x++ / x-- は「+1 / -1」
x += 5 / x -= 3 は「任意の数を足したり引いたりできる」






では次は 条件分岐（if / else if / else） の復習問題です。
✅ 問題9（条件分岐）
ある人のテストの点数（score）によって判定を出すプログラムを書いてください。
80点以上なら「合格」
60点以上80点未満なら「追試」
60点未満なら「不合格」

👉 ヒント：if / else if / else を使います。
✍️ Java のコードで書いてみてください。

public class Main {
  public static void main (String[] args){
    int score = 60;

    if (score >= 80){
      System.out.println("合格");
    }else if (score >= 60 && score < 80){
      System.out.println("追試");
    }else {
      System.out.println("不合格");
    }
  }
}





✅ 問題10（switch文）
ある変数 day に 1〜7 の整数が入っているとします。
その数値によって、次のように曜日を出力するプログラムを書いてください。
1 → 「日曜日」
2 → 「月曜日」
3 → 「火曜日」
4 → 「水曜日」
5 → 「木曜日」
6 → 「金曜日」
7 → 「土曜日」
それ以外 → 「不明な曜日」

👉 ヒント：switch文 を使い、break と default を忘れないでください。
✍️ Java のコードで書いてみてください。

public class Main {
  public static void main (String[] args){
    int day =10;

    switch (day){
      case 1:
      System.out.println("日曜日");
      break;

      case 2:
      System.out.println("月曜日");
      break;

      case 3:
      System.out.println("火曜日");
      break;

      case 4:
      System.out.println("水曜日");
      break;

      case 5:
      System.out.println("木曜日");
      break;

      case 6:
      System.out.println("金曜日");
      break;

      case 7:
      System.out.println("土曜日");
      break;

      default:
      System.out.println("不明な曜日");
    }
  }
}






✅ 問題11（ネストされた条件分岐）
ある人の年齢（age）によって、次のように判定するプログラムを書いてください。
20歳未満 → 「未成年」
さらに 13歳以上なら「ティーン」
20歳以上 → 「成人」
さらに 65歳以上なら「高齢者」

👉 ヒント：if の中に if を入れて「ネスト（入れ子）」にします。

✍️ Java のコードで書いてみてください。

public class Main {
  public static void main (String[] args){
    int age =78;

    if (age < 20){
      System.out.println("未成年");
      if(age >= 13){
        System.out.println("ティーン");
      }
    }else {
      System.out.println("成人");
      if (age >= 65){
        System.out.println("高齢者");
      }
    }
  }
}






✅ 問題12（for文）
1から10までの整数を for文 を使って順番に出力してください。

👉 出力例：

1
2
3
4
5
6
7
8
9
10


✍️ Java のコードで書いてみてください。

public class Main {
  public static void main (String[] args){
    for (int i =1; i <=10; i++){
    System.out.println(i);
    }
  }
}






✅ 問題13（while文）
1から10までの整数を while文 を使って順番に出力してください。

👉 出力例：

1
2
3
4
5
6
7
8
9
10


✍️ Java のコードで書いてみてください。

public class Main {
  public static void main (String[] args){
  int i =1;
    while (i <= 10){
      System.out.println(i);
      i++;
    }
  }
}





✅ 問題14（do-while文）
1から10までの整数を do-while文 を使って順番に出力してください。

👉 出力例：

1
2
3
4
5
6
7
8
9
10


✍️ Java のコードで書いてみてください。

public class Main {
  public static void main (String[] args){
    int i =1;

    do {
      System.out.println(i);
      i++;
    }while (i <= 10);
  }
}





✅ 問題15（ネストされたループ）

次のような九九（掛け算表）を ネストされた for文 を使って出力してください。

👉 出力例（九九表の一部、縦×横）：

1 × 1 = 1
1 × 2 = 2
...
9 × 9 = 81


✍️ Java のコードで書いてみてください。

public class Main {
  public static void main (String[] args){
    for (int i=1; i <= 9; i++){
      for (int j=1; j <= 9; j++){
      System.out.println(i + "×" + j + "=" + (i * j));
      }
    }
  }
}